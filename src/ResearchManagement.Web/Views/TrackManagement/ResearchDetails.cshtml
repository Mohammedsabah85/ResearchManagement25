@model ResearchManagement.Web.Models.ViewModels.TrackResearchDetailsViewModel
@{
    ViewData["Title"] = "تفاصيل البحث";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
}

<!-- Navigation and Header -->
<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "TrackManagement")">
                            <i class="fas fa-home me-1"></i>إدارة البحوث
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">تفاصيل البحث</li>
                </ol>
            </nav>

            <div class="d-flex justify-content-between align-items-start">
                <div>
                    <h1 class="h3 mb-2">
                        <i class="fas fa-file-alt me-2 text-primary"></i>
                        @Model.Research.Title
                    </h1>
                    <p class="text-muted mb-0">تفاصيل البحث وإدارة المراجعات</p>
                </div>
                <div class="text-end">
                    @{
                        var statusClass = Model.Research.Status == ResearchManagement.Domain.Enums.ResearchStatus.Accepted ? "success" :
                        Model.Research.Status == ResearchManagement.Domain.Enums.ResearchStatus.Rejected ? "danger" :
                        Model.Research.Status == ResearchManagement.Domain.Enums.ResearchStatus.UnderReview ? "warning" : "secondary";
                    }
                    <span class="badge bg-@statusClass fs-6 px-3 py-2">
                        <i class="fas fa-circle me-1"></i>@Model.Research.Status
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Debug Panel (للتطوير فقط) -->
    @if (ViewBag.DebugInfo != null)
    {
        <div class="alert alert-info alert-dismissible fade show">
            <h6 class="alert-heading">
                <i class="fas fa-bug me-2"></i>معلومات التشخيص النظام
            </h6>
          @*   <div class="row small mb-3">
                <div class="col-md-2">
                    <strong>مدير التراك:</strong><br>
                    <code>@ViewBag.DebugInfo.TrackManagerId</code><br>
                   <small class="text-muted">@ViewBag.DebugInfo.TrackManagerTrack</small> 
                </div>
                <div class="col-md-2">
                    <strong>معرف البحث:</strong><br>
                    <code>@ViewBag.DebugInfo.ResearchId</code>
                </div>
                <div class="col-md-2">
                    <strong>المراجعات:</strong><br>
                    <span class="badge bg-info">@ViewBag.DebugInfo.ReviewsCount</span>
                </div>
                <div class="col-md-2">
                    <strong>مراجعين التراك:</strong><br>
                    <span class="badge bg-warning">@ViewBag.DebugInfo.TrackReviewersCount</span>
                </div>
                <div class="col-md-2">
                    <strong>المراجعين المتاحين:</strong><br>
                    <span class="badge bg-success">@ViewBag.DebugInfo.AvailableReviewersCount</span>
                </div>
                <div class="col-md-2">
                    <strong>إجمالي المراجعين:</strong><br>
                    <span class="badge bg-primary">@ViewBag.DebugInfo.AllReviewersInSystem</span>
                </div>
            </div> 

            @if (ViewBag.DebugInfo.TrackReviewersCount == 0 && ViewBag.DebugInfo.AllReviewersInSystem > 0)
            {
                <div class="alert alert-warning alert-sm mb-2">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>مشكلة محتملة:</strong> يوجد @ViewBag.DebugInfo.AllReviewersInSystem مراجع في النظام ولكن لا يوجد أي منهم مخصص لهذا التراك.
                    <button type="button" class="btn btn-sm btn-warning ms-2" onclick="autoAssignReviewersToTrack()">
                        <i class="fas fa-magic me-1"></i>ربط المراجعين تلقائياً
                    </button>
                </div> *@
            }

            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Main Content Layout -->
    <div class="row">
        <!-- Left Column: Research Details -->
        <div class="col-xl-8 col-lg-7">

            <!-- Research Basic Information -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle me-2 text-primary"></i>
                        معلومات البحث
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-borderless table-sm">
                                <tr>
                                    <th class="text-muted" width="40%">العنوان:</th>
                                    <td class="fw-bold">@Model.Research.Title</td>
                                </tr>
                                @if (!string.IsNullOrEmpty(Model.Research.TitleEn))
                                {
                                    <tr>
                                        <th class="text-muted">العنوان (إنجليزي):</th>
                                        <td>@Model.Research.TitleEn</td>
                                    </tr>
                                }
                                <tr>
                                    <th class="text-muted">نوع البحث:</th>
                                    <td><span class="badge bg-info">@Model.Research.ResearchType</span></td>
                                </tr>
                                <tr>
                                    <th class="text-muted">التخصص:</th>
                                    <td><span class="badge bg-primary">@Model.Research.Track</span></td>
                                </tr>
                                <tr>
                                    <th class="text-muted">اللغة:</th>
                                    <td><span class="badge bg-secondary">@Model.Research.Language</span></td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-borderless table-sm">
                                <tr>
                                    <th class="text-muted" width="40%">تاريخ التقديم:</th>
                                    <td>
                                        <i class="fas fa-calendar me-1"></i>
                                        @Model.Research.SubmissionDate.ToString("yyyy/MM/dd")
                                        <br>
                                        <small class="text-muted">@Model.Research.SubmissionDate.ToString("HH:mm")</small>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="text-muted">المؤلفون:</th>
                                    <td>
                                        <span class="badge bg-dark">@Model.Research.Authors.Count مؤلف</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="text-muted">الملفات:</th>
                                    <td>
                                        <span class="badge bg-dark">@Model.Research.Files.Count ملف</span>
                                    </td>
                                </tr>
                                <tr>
                                    <th class="text-muted">المراجعات:</th>
                                    <td>
                                        <span class="badge bg-success">@Model.Reviews.Count(r => r.IsCompleted) مكتملة</span>
                                        <span class="badge bg-warning">@Model.Reviews.Count(r => !r.IsCompleted) معلقة</span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>

                    <!-- Abstract -->
                    <div class="mt-3">
                        <h6 class="text-muted mb-2">
                            <i class="fas fa-align-left me-1"></i>الملخص:
                        </h6>
                        <div class="bg-light p-3 rounded border">
                            @Model.Research.AbstractAr
                        </div>
                    </div>

                    <!-- Keywords -->
                    @if (!string.IsNullOrEmpty(Model.Research.Keywords))
                    {
                        <div class="mt-3">
                            <h6 class="text-muted mb-2">
                                <i class="fas fa-tags me-1"></i>الكلمات المفتاحية:
                            </h6>
                            <div>
                                @foreach (var keyword in Model.Research.Keywords.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                {
                                    <span class="badge bg-light text-dark border me-1 mb-1">@keyword.Trim()</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Authors Section -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-users me-2 text-success"></i>
                        المؤلفون (@Model.Research.Authors.Count)
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Research.Authors.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th width="8%">الترتيب</th>
                                        <th width="30%">الاسم</th>
                                        <th width="35%">البريد الإلكتروني</th>
                                        <th width="27%">المؤسسة</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var author in Model.Research.Authors.OrderBy(a => a.Order))
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-primary">@author.Order</span>
                                                @if (author.IsCorresponding)
                                                {
                                                    <i class="fas fa-star text-warning ms-1" title="المؤلف المراسل"></i>
                                                }
                                            </td>
                                            <td>
                                                <div>
                                                    <strong>@author.FirstName @author.LastName</strong>
                                                    @if (!string.IsNullOrEmpty(author.AcademicDegree))
                                                    {
                                                        <br>

                                                        <small class="text-muted">@author.AcademicDegree</small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                <a href="mailto:@author.Email" class="text-decoration-none">
                                                    <i class="fas fa-envelope me-1"></i>@author.Email
                                                </a>
                                            </td>
                                            <td>@(author.Institution ?? "-")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-3">
                            <i class="fas fa-users fa-2x text-muted mb-2"></i>
                            <p class="text-muted">لا توجد معلومات مؤلفين</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Files Section -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-paperclip me-2 text-info"></i>
                        الملفات المرفقة (@Model.Research.Files.Count)
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Research.Files.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var file in Model.Research.Files)
                            {
                                <a href="@Url.Action("DownloadFile", "Research", new { id = file.Id })"
                                   class="list-group-item list-group-item-action d-flex align-items-center">
                                    <div class="me-3">
                                        <i class="fas fa-file-pdf fa-2x text-danger"></i>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h6 class="mb-1">@file.OriginalFileName</h6>
                                        @if (!string.IsNullOrEmpty(file.Description))
                                        {
                                            <p class="mb-1 text-muted small">@file.Description</p>
                                        }
                                        <small class="text-info">@file.FileType</small>
                                    </div>
                                    <div>
                                        <i class="fas fa-download text-primary"></i>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-paperclip fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">لا توجد ملفات مرفقة</h6>
                            <p class="text-muted small">لم يقم الباحث بإرفاق أي ملفات</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Right Column: Reviews Management -->
        <div class="col-xl-4 col-lg-5">

            <!-- Reviews Management Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-clipboard-check me-2 text-warning"></i>
                        إدارة المراجعات
                    </h5>
                    <button type="button" class="btn btn-success btn-sm"
                            data-bs-toggle="modal" data-bs-target="#assignReviewModal">
                        <i class="fas fa-plus me-1"></i>تعيين مراجع
                    </button>
                </div>
                <div class="card-body">
                    @if (Model.Reviews.Any())
                    {
                        @foreach (var review in Model.Reviews)
                        {
                            <div class="border rounded p-3 mb-3 review-item">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div>
                                        <h6 class="mb-1">
                                            <i class="fas fa-user-circle me-1"></i>
                                            @review.Reviewer.FirstName @review.Reviewer.LastName
                                        </h6>
                                        <small class="text-muted">@review.Reviewer.Email</small>
                                    </div>
                                    <div>
                                        @if (review.IsCompleted)
                                        {
                                            <span class="badge bg-success">مكتملة</span>
                                        }
                                        else if (review.Deadline < DateTime.UtcNow)
                                        {
                                            <span class="badge bg-danger">متأخرة</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">معلقة</span>
                                        }
                                    </div>
                                </div>

                                <div class="row text-center small mb-2">
                                    <div class="col-6">
                                        <div class="text-muted">تاريخ التعيين</div>
                                        <strong>@review.AssignedDate.ToString("MM/dd")</strong>
                                    </div>
                                    <div class="col-6">
                                        <div class="text-muted">الموعد النهائي</div>
                                        <strong class="@(review.Deadline < DateTime.UtcNow && !review.IsCompleted ? "text-danger" : "")">
                                            @review.Deadline.ToString("MM/dd")
                                        </strong>
                                    </div>
                                </div>

                                @if (review.IsCompleted)
                                {
                                    <div class="bg-light rounded p-2">
                                        <div class="row text-center">
                                            <div class="col-6">
                                                <div class="text-muted small">التقييم الإجمالي</div>
                                                <h5 class="mb-0 text-primary">@review.OverallScore.ToString("0.0")</h5>
                                                <small class="text-muted">من 10</small>
                                            </div>
                                            <div class="col-6">
                                                <div class="text-muted small">القرار</div>
                                                <div class="fw-bold text-info">@review.Decision</div>
                                            </div>
                                        </div>
                                        <button type="button" class="btn btn-outline-primary btn-sm w-100 mt-2"
                                                data-bs-toggle="modal" data-bs-target="#reviewDetailsModal-@review.Id">
                                            <i class="fas fa-eye me-1"></i>عرض التفاصيل الكاملة
                                        </button>
                                    </div>
                                }
                                else
                                {
                                    <div class="d-grid">
                                        <button type="button" class="btn btn-outline-warning btn-sm"
                                                onclick="sendReminder(@review.Id)">
                                            <i class="fas fa-bell me-1"></i>إرسال تذكير
                                        </button>
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-clipboard-list fa-4x text-muted mb-3"></i>
                            <h6 class="text-muted">لم يتم تعيين مراجعين</h6>
                            <p class="text-muted small mb-3">قم بتعيين مراجعين لبدء عملية المراجعة</p>
                            <button type="button" class="btn btn-success"
                                    data-bs-toggle="modal" data-bs-target="#assignReviewModal">
                                <i class="fas fa-plus me-2"></i>تعيين أول مراجع
                            </button>
                        </div>
                    }
                </div>
            </div>

            <!-- Statistics Card -->
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-chart-pie me-2 text-info"></i>
                        إحصائيات سريعة
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6 mb-3">
                            <div class="bg-primary bg-opacity-10 rounded p-3">
                                <h3 class="text-primary mb-1">@Model.Reviews.Count</h3>
                                <small class="text-muted">إجمالي المراجعات</small>
                            </div>
                        </div>
                        <div class="col-6 mb-3">
                            <div class="bg-success bg-opacity-10 rounded p-3">
                                <h3 class="text-success mb-1">@Model.Reviews.Count(r => r.IsCompleted)</h3>
                                <small class="text-muted">مكتملة</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="bg-warning bg-opacity-10 rounded p-3">
                                <h3 class="text-warning mb-1">@Model.Reviews.Count(r => !r.IsCompleted)</h3>
                                <small class="text-muted">معلقة</small>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="bg-danger bg-opacity-10 rounded p-3">
                                <h3 class="text-danger mb-1">@Model.Reviews.Count(r => !r.IsCompleted && r.Deadline < DateTime.UtcNow)</h3>
                                <small class="text-muted">متأخرة</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions Card -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-tools me-2 text-secondary"></i>
                        إجراءات سريعة
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-outline-primary"
                                data-bs-toggle="modal" data-bs-target="#updateStatusModal">
                            <i class="fas fa-edit me-2"></i>تحديث حالة البحث
                        </button>
                        <a href="@Url.Action("AssignReviews", "TrackManagement")" class="btn btn-outline-info">
                            <i class="fas fa-tasks me-2"></i>إدارة التوزيعات
                        </a>
                        <a href="@Url.Action("Reports", "TrackManagement")" class="btn btn-outline-success">
                            <i class="fas fa-chart-bar me-2"></i>التقارير
                        </a>
                        <hr>
                        <a href="@Url.Action("Index", "TrackManagement")" class="btn btn-secondary">
                            <i class="fas fa-arrow-left me-2"></i>العودة للقائمة
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Assign Review Modal -->
<div class="modal fade" id="assignReviewModal" tabindex="-1" aria-labelledby="assignReviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form asp-action="AssignReview" method="post" id="assignReviewForm">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="assignReviewModalLabel">
                        <i class="fas fa-user-plus me-2"></i>تعيين مراجع جديد
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="ResearchId" value="@Model.Research.Id" />

                    <!-- معلومات البحث -->
                    <div class="alert alert-light border-start border-success border-4 mb-4">
                        <h6 class="alert-heading">
                            <i class="fas fa-file-alt me-2"></i>معلومات البحث:
                        </h6>
                        <strong>@Model.Research.Title</strong><br>
                        <small class="text-muted">التخصص: @Model.Research.Track | تاريخ التقديم: @Model.Research.SubmissionDate.ToString("yyyy/MM/dd")</small>
                    </div>

                    <!-- اختيار المراجع -->
                    <div class="mb-4">
                        <label class="form-label fw-bold">
                            <i class="fas fa-user me-2"></i>اختر المراجع:
                        </label>
                        <div class="input-group">
                            <select name="ReviewerId" id="reviewerSelect" class="form-select" required>
                                <option value="">-- جاري تحميل المراجعين... --</option>
                                @if (ViewBag.AvailableReviewers != null)
                                {
                                    var reviewers = (List<ResearchManagement.Domain.Entities.User>)ViewBag.AvailableReviewers;
                                    <option value="">-- اختر المراجع --</option>
                                    foreach (var reviewer in reviewers)
                                    {
                                        <option value="@reviewer.Id">
                                            @reviewer.FirstName @reviewer.LastName - @reviewer.Email
                                            @if (!string.IsNullOrEmpty(reviewer.Institution))
                                            {
                                                <text> (@reviewer.Institution)</text>
                                            }
                                        </option>
                                    }
                                }
                            </select>
                            <button type="button" class="btn btn-outline-secondary" onclick="refreshReviewers()">
                                <i class="fas fa-sync"></i>
                            </button>
                        </div>
                        <div class="form-text">
                            <span id="reviewerCount">
                                @if (ViewBag.AvailableReviewers != null)
                                {
                                    var count = ((List<ResearchManagement.Domain.Entities.User>)ViewBag.AvailableReviewers).Count;
                                    <i class="fas fa-info-circle me-1 text-info"></i>
                                    <text>يوجد @count مراجع متاح للتعيين</text>
                                }
                                else
                                {
                                    <i class="fas fa-exclamation-triangle me-1 text-warning"></i>
                                    <text>لا توجد بيانات مراجعين</text>
                                }
                            </span>
                        </div>
                    </div>

                    <!-- الموعد النهائي -->
                    <div class="mb-4">
                        <label class="form-label fw-bold">
                            <i class="fas fa-calendar me-2"></i>الموعد النهائي للمراجعة:
                        </label>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="form-label small">عدد الأيام:</label>
                                <input type="number" name="DeadlineDays" id="deadlineDays" class="form-control"
                                       value="14" min="1" max="60" required />
                                <div class="form-text">من 1 إلى 60 يوماً</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label small">التاريخ المحسوب:</label>
                                <input type="text" id="calculatedDate" class="form-control bg-light" readonly />
                                <div class="form-text">سيتم حساب التاريخ تلقائياً</div>
                            </div>
                        </div>
                    </div>

                    <!-- معلومات المراجع المختار -->
                    <div id="selectedReviewerInfo" class="alert alert-success border-start border-success border-4 d-none">
                        <h6 class="alert-heading">
                            <i class="fas fa-user-check me-2"></i>معلومات المراجع المختار:
                        </h6>
                        <div id="reviewerDetails"></div>
                    </div>

                    <!-- تعليمات مهمة -->
                    <div class="alert alert-info">
                        <h6 class="alert-heading">
                            <i class="fas fa-lightbulb me-2"></i>تعليمات مهمة:
                        </h6>
                        <ul class="mb-0 small">
                            <li>سيتم إرسال إشعار فوري للمراجع المحدد</li>
                            <li>ستظهر المراجعة في قائمة المراجعات المعلقة</li>
                            <li>يمكن متابعة حالة المراجعة من هذه الصفحة</li>
                            <li>في حالة التأخر، يمكن إرسال تذكيرات للمراجع</li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer bg-light">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>إلغاء
                    </button>
                    <button type="submit" class="btn btn-success" id="assignBtn" disabled>
                        <i class="fas fa-plus me-1"></i>تعيين المراجع
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Global variables
        let currentResearchId = @Model.Research.Id;
        let availableReviewers = [];

        // Document ready
        $(document).ready(function () {
            console.log('🚀 تم تحميل صفحة تفاصيل البحث');
            console.log('📋 معرف البحث:', currentResearchId);
            console.log('📊 عدد المراجعات الحالية:', @Model.Reviews.Count);

            initializeModal();
            setupEventHandlers();
            loadInitialData();
        });

        // Initialize modal
        function initializeModal() {
            $('#assignReviewModal').on('shown.bs.modal', function () {
                console.log('📖 تم فتح مودال تعيين المراجع');
                validateReviewersList();
                calculateDeadlineDate();
                $('#reviewerSelect').focus();
            });

            $('#assignReviewModal').on('hidden.bs.modal', function () {
                resetModalForm();
            });
        }

        // Setup event handlers
        function setupEventHandlers() {
            // Deadline calculation
            $('#deadlineDays').on('input change', calculateDeadlineDate);

            // Reviewer selection
            $('#reviewerSelect').on('change', updateSelectedReviewerInfo);

            // Form validation
            $('#assignReviewForm').on('submit', validateAssignmentForm);
        }

        // Load initial data
        function loadInitialData() {
        @if (ViewBag.AvailableReviewers != null)
        {
            var reviewers = (List<ResearchManagement.Domain.Entities.User>)ViewBag.AvailableReviewers;
            <text>
                    console.log('✅ تم تحميل المراجعين من ViewBag:', @reviewers.Count);
                    availableReviewers = [
                @foreach (var reviewer in reviewers)
                {
                    <text>{
                                    id: '@reviewer.Id',
                                    name: '@reviewer.FirstName @reviewer.LastName',
                                    email: '@reviewer.Email',
                                    institution: '@(reviewer.Institution ?? "")',
                                    fullDisplay: '@reviewer.FirstName @reviewer.LastName - @reviewer.Email@(string.IsNullOrEmpty(reviewer.Institution) ? "" : $" ({reviewer.Institution})")'
                                },</text>
                }
                    ];
            </text>
        }
        else
        {
            <text>
                    console.log('⚠️ ViewBag.AvailableReviewers فارغ - سيتم التحميل من API');
                    availableReviewers = [];
            </text>
        }

            calculateDeadlineDate();
        }

        // Validate reviewers list
        function validateReviewersList() {
            const select = $('#reviewerSelect');
            const hasValidOptions = select.find('option[value!=""]').length > 0;

            if (!hasValidOptions || availableReviewers.length === 0) {
                console.log('🔄 لا توجد مراجعين متاحين - محاولة التحديث');
                refreshReviewers();
            } else {
                console.log('✅ يوجد', availableReviewers.length, 'مراجع متاح');
                updateReviewerCount();
            }
        }

        // Calculate deadline date
        function calculateDeadlineDate() {
            const days = parseInt($('#deadlineDays').val()) || 0;
            const calculatedField = $('#calculatedDate');

            if (days > 0 && days <= 60) {
                const date = new Date();
                date.setDate(date.getDate() + days);

                const options = {
                    year: 'numeric',
                    month: '2-digit',
                    day: '2-digit',
                    weekday: 'long'
                };

                const formattedDate = date.toLocaleDateString('ar-SA', options);
                calculatedField.val(formattedDate);
                calculatedField.removeClass('is-invalid').addClass('is-valid');
            } else {
                calculatedField.val('يرجى إدخال عدد صحيح من الأيام');
                calculatedField.removeClass('is-valid').addClass('is-invalid');
            }
        }

        // Update selected reviewer info
        function updateSelectedReviewerInfo() {
            const reviewerId = $('#reviewerSelect').val();
            const selectedOption = $('#reviewerSelect option:selected');
            const selectedText = selectedOption.text();

            if (reviewerId && selectedText !== '-- اختر المراجع --' && selectedText !== '-- جاري تحميل المراجعين... --') {
                // Find reviewer details
                const reviewer = availableReviewers.find(r => r.id === reviewerId);

                let detailsHtml = `
                    <div class="d-flex align-items-center">
                        <div class="me-3">
                            <i class="fas fa-user-circle fa-3x text-success"></i>
                        </div>
                        <div>
                            <h6 class="mb-1">${reviewer ? reviewer.name : selectedText.split(' - ')[0]}</h6>
                            <p class="mb-1 text-muted">${reviewer ? reviewer.email : selectedText.split(' - ')[1]}</p>
                            ${reviewer && reviewer.institution ? `<small class="text-muted">${reviewer.institution}</small>` : ''}
                        </div>
                    </div>
                `;

                $('#reviewerDetails').html(detailsHtml);
                $('#selectedReviewerInfo').removeClass('d-none');
                $('#assignBtn').prop('disabled', false);

                console.log('👤 تم اختيار المراجع:', reviewer ? reviewer.name : selectedText);
            } else {
                $('#selectedReviewerInfo').addClass('d-none');
                $('#assignBtn').prop('disabled', true);
            }
        }

        // Refresh reviewers list
        function refreshReviewers() {
            const select = $('#reviewerSelect');
            const countSpan = $('#reviewerCount');

            console.log('🔄 بدء تحديث قائمة المراجعين...');

            // Show loading state
            select.html('<option value="">🔄 جاري التحديث...</option>');
            select.prop('disabled', true);
            countSpan.html('<i class="fas fa-spinner fa-spin me-1 text-primary"></i>جاري تحديث القائمة...');

            // Call API
            fetch(`@Url.Action("GetAvailableReviewersForResearch", "TrackManagement")?researchId=${currentResearchId}`)
                .then(response => {
                    console.log('📡 استجابة API:', response.status);
                    if (!response.ok) {
                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('📦 بيانات API:', data);

                    select.empty();

                    if (data.success && data.reviewers && data.reviewers.length > 0) {
                        select.append('<option value="">-- اختر المراجع --</option>');

                        // Update global array
                        availableReviewers = data.reviewers;

                        // Populate dropdown
                        data.reviewers.forEach(reviewer => {
                            const displayText = reviewer.fullDisplay || reviewer.FullDisplay ||
                                `${reviewer.name || reviewer.Name} - ${reviewer.email || reviewer.Email}`;
                            select.append(`<option value="${reviewer.id || reviewer.Id}">${displayText}</option>`);
                        });

                        countSpan.html(`
                            <i class="fas fa-check-circle me-1 text-success"></i>
                            تم التحديث بنجاح - يوجد ${data.reviewers.length} مراجع متاح
                        `);

                        console.log('✅ تم تحديث القائمة بنجاح:', data.reviewers.length, 'مراجع');
                    } else {
                        select.append('<option value="">❌ لا يوجد مراجعين متاحين</option>');
                        countSpan.html(`
                            <i class="fas fa-exclamation-triangle me-1 text-warning"></i>
                            ${data.message || 'لا يوجد مراجعين متاحين حالياً'}
                        `);

                        console.log('⚠️ لا توجد مراجعين متاحين');
                    }
                })
                .catch(error => {
                    console.error('❌ خطأ في تحديث المراجعين:', error);

                    select.empty();
                    select.append('<option value="">❌ خطأ في التحديث</option>');
                    countSpan.html(`
                        <i class="fas fa-exclamation-circle me-1 text-danger"></i>
                        فشل في التحديث: ${error.message}
                    `);

                    // Try fallback with static data
                    loadFallbackReviewers();
                })
                .finally(() => {
                    select.prop('disabled', false);
                });
        }

        // Load fallback reviewers
        function loadFallbackReviewers() {
            console.log('🆘 تحميل مراجعين احتياطيين...');

            const fallbackReviewers = [
                {
                    id: 'fallback-1',
                    name: 'د. مراجع تجريبي الأول',
                    email: 'reviewer1@test.com',
                    institution: 'للاختبار فقط',
                    fullDisplay: 'د. مراجع تجريبي الأول - reviewer1@test.com (للاختبار فقط)'
                },
                {
                    id: 'fallback-2',
                    name: 'د. مراجع تجريبي الثاني',
                    email: 'reviewer2@test.com',
                    institution: 'للاختبار فقط',
                    fullDisplay: 'د. مراجع تجريبي الثاني - reviewer2@test.com (للاختبار فقط)'
                }
            ];

            const select = $('#reviewerSelect');
            const countSpan = $('#reviewerCount');

            select.empty();
            select.append('<option value="">-- اختر المراجع --</option>');

            fallbackReviewers.forEach(reviewer => {
                select.append(`<option value="${reviewer.id}">${reviewer.fullDisplay}</option>`);
            });

            availableReviewers = fallbackReviewers;

            countSpan.html(`
                <i class="fas fa-info-circle me-1 text-info"></i>
                تم تحميل ${fallbackReviewers.length} مراجع احتياطي للاختبار
            `);

            console.log('✅ تم تحميل المراجعين الاحتياطيين');
        }

        // Update reviewer count
        function updateReviewerCount() {
            const countSpan = $('#reviewerCount');
            if (availableReviewers.length > 0) {
                countSpan.html(`
                    <i class="fas fa-users me-1 text-success"></i>
                    يوجد ${availableReviewers.length} مراجع متاح للتعيين
                `);
            }
        }

        // Validate assignment form
        function validateAssignmentForm(e) {
            console.log('🔍 فحص صحة نموذج التعيين...');

            const reviewerId = $('#reviewerSelect').val();
            const deadlineDays = parseInt($('#deadlineDays').val());

            // Validate reviewer selection
            if (!reviewerId) {
                e.preventDefault();
                showAlert('❌ يرجى اختيار مراجع أولاً', 'danger');
                $('#reviewerSelect').focus();
                return false;
            }

            // Validate deadline
            if (!deadlineDays || deadlineDays < 1 || deadlineDays > 60) {
                e.preventDefault();
                showAlert('❌ يرجى إدخال موعد نهائي صحيح (1-60 يوم)', 'danger');
                $('#deadlineDays').focus();
                return false;
            }

            // Confirmation dialog
            const selectedReviewer = $('#reviewerSelect option:selected').text();
            const calculatedDate = $('#calculatedDate').val();

            const confirmMessage = `هل أنت متأكد من تعيين هذا المراجع؟\n\n` +
                `المراجع: ${selectedReviewer.split(' - ')[0]}\n` +
                `الموعد النهائي: ${calculatedDate}\n\n` +
                `سيتم إرسال إشعار فوري للمراجع.`;

            if (!confirm(confirmMessage)) {
                e.preventDefault();
                return false;
            }

            // Show loading state
            const submitBtn = $('#assignBtn');
            submitBtn.html('<i class="fas fa-spinner fa-spin me-1"></i>جاري التعيين...').prop('disabled', true);

            console.log('✅ تم قبول النموذج - جاري الإرسال');
            return true;
        }

        // Reset modal form
        function resetModalForm() {
            $('#reviewerSelect').val('');
            $('#deadlineDays').val('14');
            $('#selectedReviewerInfo').addClass('d-none');
            $('#assignBtn').html('<i class="fas fa-plus me-1"></i>تعيين المراجع').prop('disabled', true);
            calculateDeadlineDate();
        }

        // Auto assign reviewers to track
        function autoAssignReviewersToTrack() {
            console.log('🔗 بدء ربط المراجعين بالتراك تلقائياً...');

            if (!confirm('هل تريد ربط جميع المراجعين الموجودين في النظام بهذا التراك؟\n\nسيتم إضافة جميع المراجعين المتاحين إلى قائمة مراجعي هذا التخصص.')) {
                return;
            }

            // Show loading
            const btn = event.target;
            const originalHtml = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>جاري الربط...';
            btn.disabled = true;

            fetch('@Url.Action("AutoAssignReviewersToTrack", "TrackManagement")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showAlert(`✅ تم ربط ${data.addedCount} مراجع بالتراك بنجاح!\n\nإجمالي مراجعي التراك الآن: ${data.totalTrackReviewers}`, 'success');

                    // Refresh the page after 2 seconds
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                } else {
                    showAlert(`❌ فشل في ربط المراجعين: ${data.message}`, 'danger');
                }
            })
            .catch(error => {
                console.error('خطأ في ربط المراجعين:', error);
                showAlert(`❌ حدث خطأ في ربط المراجعين: ${error.message}`, 'danger');
            })
            .finally(() => {
                btn.innerHTML = originalHtml;
                btn.disabled = false;
            });
        }

        // Show alert message
        function showAlert(message, type = 'info') {
            const alertClass = `alert-${type}`;
            const iconClass = {
                success: 'check-circle',
                danger: 'times-circle',
                warning: 'exclamation-triangle',
                info: 'info-circle'
            }[type] || 'info-circle';

            const alertHtml = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                    <i class="fas fa-${iconClass} me-2"></i>${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;

            $('.container-fluid').prepend(alertHtml);

            // Auto dismiss after 5 seconds
            setTimeout(() => {
                $('.alert').fadeOut();
            }, 5000);
        }

        // Debug information
        console.log('🔧 معلومات التشخيص الشاملة:');
        console.log('Research Details:', {
            id: currentResearchId,
            title: '@Model.Research.Title',
            status: '@Model.Research.Status',
            reviewsCount: @Model.Reviews.Count,
            availableReviewersFromViewBag: @(ViewBag.AvailableReviewers != null ? ((List<ResearchManagement.Domain.Entities.User>)ViewBag.AvailableReviewers).Count : 0)
        });

        @if (ViewBag.DebugInfo != null)
        {
            <text>console.log('Debug Info from Controller:', @Html.Raw(Json.Serialize(ViewBag.DebugInfo)));</text>
        }
    </script>
}

@section Styles {
    <style>
        /* Modern Card Styling */
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }

            .card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
            }

        .card-header {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-bottom: 1px solid #dee2e6;
            border-radius: 12px 12px 0 0 !important;
            padding: 1rem 1.25rem;
        }

        .card-body {
            padding: 1.25rem;
        }

        /* Review Items Styling */
        .review-item {
            background: #f8f9fa;
            border: 1px solid #e9ecef !important;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .review-item:hover {
                background: #ffffff;
                border-color: #007bff !important;
                box-shadow: 0 2px 8px rgba(0, 123, 255, 0.15);
            }

        /* Badge Improvements */
        .badge {
            font-weight: 500;
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
        }

        .bg-opacity-10 {
            background-color: rgba(var(--bs-bg-opacity-rgb), 0.1) !important;
        }

        /* Modal Enhancements */
        .modal-content {
            border-radius: 12px;
            border: none;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
        }

        .modal-header {
            border-radius: 12px 12px 0 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        }

        .modal-footer {
            border-radius: 0 0 12px 12px;
            border-top: 1px solid #dee2e6;
        }

        /* Form Controls */
        .form-select, .form-control {
            border-radius: 8px;
            border: 1px solid #ced4da;
            padding: 0.75rem;
            transition: all 0.2s ease;
        }

            .form-select:focus, .form-control:focus {
                border-color: #007bff;
                box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.15);
                outline: none;
            }

        .is-valid {
            border-color: #28a745;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='m2.3 6.73.94-.94 1.93 1.93 3.1-3.1.94.94L3.23 8.66z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .is-invalid {
            border-color: #dc3545;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 4.6.4-.4.4.4M6 6.5v1'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        /* Button Enhancements */
        .btn {
            border-radius: 8px;
            font-weight: 500;
            padding: 0.5rem 1rem;
            transition: all 0.2s ease;
        }

            .btn:hover {
                transform: translateY(-1px);
            }

        .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border: none;
        }

        .btn-outline-primary:hover {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            border-color: #007bff;
        }

        /* Alert Enhancements */
        .alert {
            border-radius: 10px;
            border: none;
            padding: 1rem 1.25rem;
        }

        .border-start {
            border-left-width: 4px !important;
        }

        .border-4 {
            border-width: 4px !important;
        }

        /* Table Improvements */
        .table {
            margin-bottom: 0;
        }

        .table-borderless td, .table-borderless th {
            border: none;
            padding: 0.75rem 0.5rem;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }

        /* Animation Classes */
        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .fade-in-up {
            animation: fadeInUp 0.5s ease;
        }

        @@keyframes pulse {
            0%, 100%

        {
            opacity: 1;
        }

        50% {
            opacity: 0.7;
        }

        }

        .updating {
            animation: pulse 1.5s infinite;
        }

        /* Responsive Improvements */
        @@media (max-width: 768px) {
            .container-fluid

        {
            padding: 0.5rem;
        }

        .card-body {
            padding: 1rem;
        }

        .modal-lg {
            max-width: 95%;
            margin: 0.5rem;
        }

        .btn {
            padding: 0.75rem 1rem;
            font-size: 0.875rem;
        }

        .badge {
            font-size: 0.75rem;
            padding: 0.375rem 0.5rem;
        }

        .table-responsive {
            font-size: 0.875rem;
        }

        h1, h2, h3 {
            font-size: calc(1.2rem + 0.5vw);
        }

        }

        /* Dark mode support */
        @@media (prefers-color-scheme: dark) {
            .card

        {
            background-color: #2d3748;
            color: #e2e8f0;
        }

        .card-header {
            background: linear-gradient(135deg, #4a5568 0%, #2d3748 100%);
            color: #e2e8f0;
        }

        .review-item {
            background-color: #4a5568;
            border-color: #718096 !important;
        }

        .text-muted {
            color: #a0aec0 !important;
        }

        }

        /* Custom Scrollbar */
        .overflow-auto::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        .overflow-auto::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        .overflow-auto::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #007bff, #0056b3);
            border-radius: 4px;
        }

            .overflow-auto::-webkit-scrollbar-thumb:hover {
                background: linear-gradient(135deg, #0056b3, #004085);
            }

        /* Loading States */
        .loading {
            position: relative;
            overflow: hidden;
        }

            .loading::after {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
                animation: loading-shimmer 1.5s infinite;
            }

        @@keyframes loading-shimmer {
            0%

        {
            left: -100%;
        }

        100% {
            left: 100%;
        }

        }

        /* Success States */
        .success-state {
            border-left: 4px solid #28a745;
            background-color: rgba(40, 167, 69, 0.05);
        }

        .warning-state {
            border-left: 4px solid #ffc107;
            background-color: rgba(255, 193, 7, 0.05);
        }

        .danger-state {
            border-left: 4px solid #dc3545;
            background-color: rgba(220, 53, 69, 0.05);
        }
    </style>
}